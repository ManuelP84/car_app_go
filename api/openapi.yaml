openapi: 3.0.3
info:
  title: API de Automóviles
  version: 1.0.0
  description: API para manejar la información de los automóviles.

components:
  schemas:
    CarDto:
      type: object
      properties:
        id:
          type: string
          description: El ID del automóvil.
        model:
          type: string
          description: El modelo del automóvil.
        make:
          type: string
          description: La marca del automóvil.
        package:
          type: string
          description: El paquete del automóvil.
        color:
          type: string
          description: El color del automóvil.
        fabricationYear:
          type: integer
          description: El año de fabricación del automóvil.
        category:
          type: string
          description: La categoría del automóvil.
        mileage:
          type: integer
          description: El kilometraje del automóvil.
        price:
          type: integer
          description: El precio del automóvil.
      required:
        - model
        - make
        - package
        - color
        - fabricationYear
        - category
        - mileage
        - price

paths:
  /cars/all:
    get:
      summary: Obtener todos los automóviles.
      description: Este endpoint devuelve una lista de todos los automóviles en el sistema.
      operationId: findAllCars
      responses:
        '200':
          description: Lista de automóviles obtenida exitosamente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarDto'
        '500':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"
  /cars/{id}:
    get:
      summary: Obtener un automóvil por su ID.
      description: Este endpoint devuelve un automóvil específico según el ID proporcionado.
      operationId: findCarById
      parameters:
        - name: id
          in: path
          description: El ID del automóvil que se desea obtener.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Automóvil encontrado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarDto'
        '404':
          description: Automóvil no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Car not found"
        '500':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"
  /cars:
    post:
      summary: Crear un nuevo automóvil.
      description: Este endpoint permite crear un nuevo automóvil en el sistema.
      operationId: createCar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarDto'
      responses:
        '200':
          description: Respuesta exitosa, el automóvil fue creado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Car created"
        '400':
          description: Solicitud incorrecta, probablemente falta algún campo o el formato es inválido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Bad Request"
        '500':
          description: Error interno en el servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"
  /cars/update/{id}:
    put:
      summary: Actualizar un automóvil por su ID.
      description: Este endpoint permite actualizar un automóvil existente en el sistema.
      operationId: updateCar
      parameters:
        - name: id
          in: path
          description: El ID del automóvil que se desea actualizar.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarDto'
      responses:
        '200':
          description: Respuesta exitosa, el automóvil fue actualizado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Car updated"
        '400':
          description: Solicitud incorrecta, probablemente el cuerpo de la solicitud no coincide con el ID en la URL.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Bad Request"
        '404':
          description: Automóvil no encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Car not found"
        '500':
          description: Error interno del servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal Server Error"
